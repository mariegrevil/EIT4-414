|TopDesign
switch0 => segment_driver:uut2.display_A[0]
switch1 => segment_driver:uut2.display_A[1]
switch2 => segment_driver:uut2.display_A[2]
switch3 => segment_driver:uut2.display_A[3]
switch4 => segment_driver:uut2.display_B[0]
switch5 => segment_driver:uut2.display_B[1]
switch6 => segment_driver:uut2.display_B[2]
switch7 => segment_driver:uut2.display_B[3]
clk => segment_driver:uut2.clk
topselDispA << segment_driver:uut2.select_display_A
topselDispB << segment_driver:uut2.select_display_B
topselDispC << segment_driver:uut2.select_display_C
topselDispD << segment_driver:uut2.select_display_D
topsegA << segment_driver:uut2.segA
topsegB << segment_driver:uut2.segB
topsegC << segment_driver:uut2.segC
topsegD << segment_driver:uut2.segD
topsegE << segment_driver:uut2.segE
topsegF << segment_driver:uut2.segF
topsegG << segment_driver:uut2.segG


|TopDesign|segment_driver:uut2
display_A[0] => Mux3.IN0
display_A[1] => Mux2.IN0
display_A[2] => Mux1.IN0
display_A[3] => Mux0.IN0
display_B[0] => Mux3.IN1
display_B[1] => Mux2.IN1
display_B[2] => Mux1.IN1
display_B[3] => Mux0.IN1
display_C[0] => Mux3.IN2
display_C[1] => Mux2.IN2
display_C[2] => Mux1.IN2
display_C[3] => Mux0.IN2
display_D[0] => Mux3.IN3
display_D[1] => Mux2.IN3
display_D[2] => Mux1.IN3
display_D[3] => Mux0.IN3
segA <= segment_decoder:uut.segment_A
segB <= segment_decoder:uut.segment_B
segC <= segment_decoder:uut.segment_C
segD <= segment_decoder:uut.segment_D
segE <= segment_decoder:uut.segment_E
segF <= segment_decoder:uut.segment_F
segG <= segment_decoder:uut.segment_G
select_display_A <= select_display_A~reg0.DB_MAX_OUTPUT_PORT_TYPE
select_display_B <= select_display_B~reg0.DB_MAX_OUTPUT_PORT_TYPE
select_display_C <= select_display_C~reg0.DB_MAX_OUTPUT_PORT_TYPE
select_display_D <= select_display_D~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => clock_divider:uut1.clk


|TopDesign|segment_driver:uut2|segment_decoder:uut
Digit[0] => Mux0.IN19
Digit[0] => Mux1.IN19
Digit[0] => Mux2.IN19
Digit[0] => Mux3.IN19
Digit[0] => Mux4.IN19
Digit[0] => Mux5.IN19
Digit[0] => Mux6.IN19
Digit[1] => Mux0.IN18
Digit[1] => Mux1.IN18
Digit[1] => Mux2.IN18
Digit[1] => Mux3.IN18
Digit[1] => Mux4.IN18
Digit[1] => Mux5.IN18
Digit[1] => Mux6.IN18
Digit[2] => Mux0.IN17
Digit[2] => Mux1.IN17
Digit[2] => Mux2.IN17
Digit[2] => Mux3.IN17
Digit[2] => Mux4.IN17
Digit[2] => Mux5.IN17
Digit[2] => Mux6.IN17
Digit[3] => Mux0.IN16
Digit[3] => Mux1.IN16
Digit[3] => Mux2.IN16
Digit[3] => Mux3.IN16
Digit[3] => Mux4.IN16
Digit[3] => Mux5.IN16
Digit[3] => Mux6.IN16
segment_A <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segment_B <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment_C <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment_D <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment_E <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment_F <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment_G <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|TopDesign|segment_driver:uut2|clock_divider:uut1
clk => ~NO_FANOUT~
enable => ~NO_FANOUT~
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
data_clk[0] <= data_clk[0].DB_MAX_OUTPUT_PORT_TYPE
data_clk[1] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[2] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[3] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[4] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[5] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[6] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[7] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[8] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[9] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[10] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[11] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[12] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[13] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[14] <= count.DB_MAX_OUTPUT_PORT_TYPE
data_clk[15] <= count.DB_MAX_OUTPUT_PORT_TYPE


