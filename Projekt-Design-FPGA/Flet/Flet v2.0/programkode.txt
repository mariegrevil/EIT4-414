ved on
nulstil alt
vent på action jackson(1-4)
gem fra input1 til register
vent på action jackson(0) = 1
gem fra input 2 til register
udfør beregning ud fra action jackson(1-4)
gem resultat i display binary (RAM 1023)

taltryk opdaterer DRAM sideløbende
display opdateres sideløbende

--	  	OPCODE(5) 	AddrMemOut(10)	EnRamOut	AddrReg(5)		AddrMemIn(10)	EnRamIn	
--AJ 31 (gem action jackson på reg 31)
ProMem(0) <= 	"11011"& 	"UU00011111"&	"0"&		"UUUUU"&		"UUUUUUUUUU"&	"U"; --done
--BEQ 31 17 (reg31 op imod tallet 17)
ProMem(1) <= 	"01000"& 	"UUUUUUUUUU"&	"U"&		"11111"&		"UU00010001"&	"U"; --done
--JMPX 2 (loop tilbage til AJ (-2))
ProMem(2) <= 	"10111"& 	"UUUUUUUUUU"&	"U"&		"UUUUU"&		"UU00000010"&	"U"; --done
--VAL1 28 (gem input 1)
ProMem(3) <= 	"11000"& 	"UU00011100"&	"0"&		"UUUUU"&		"UUUUUUUUUU"&	"U"; --done
--VAL2 29 (gem input 2)
ProMem(4) <= 	"11001"& 	"UU00011101"&	"0"&		"UUUUU"&		"UUUUUUUUUU"&	"U"; --done
--ADD 30 28 29 (plus reg28 og reg29 sammen og gem i reg30)
ProMem(5) <= 	"01010"& 	"UU00011110"&	"0"&		"11100"&		"UU00011101"&	"0"; --done
--ANS 30 (send reg30 til resultat)
ProMem(6) <= 	"11010"& 	"UUUUUUUUUU"&	"U"&		"11110"&		"UUUUUUUUUU"&	"U"; --done
--GOTO 0 (hop tilbage til AJ i starten)
ProMem(7) <= 	"10110"& 	"UUUUUUUUUU"&	"U"&		"UUUUU"&		"UU00000000"&	"U"; --done